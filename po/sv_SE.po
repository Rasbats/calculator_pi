#: src/calculatorgui_impl.cpp:87
msgid ""
msgstr ""
"Project-Id-Version: opencpn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-29 19:01+0100\n"
"PO-Revision-Date: 2018-03-06 07:43-0500\n"
"Last-Translator: nohal <pavel@kalian.cz>\n"
"Language-Team: Swedish\n"
"Language: sv_SE\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: opencpn\n"
"X-Crowdin-Language: sv-SE\n"
"X-Crowdin-File: /plugins/calculator_pi/po/calculator_pi.pot\n"

#: src/calculator_pi.cpp:92 src/calculator_pi.cpp:153 src/calculatorgui.h:56
msgid "Calculator"
msgstr "Kalkylatorn"

#: src/calculator_pi.cpp:158
msgid "Symbolic Calculator Plugin"
msgstr "Symbolisk kalkylatormodul"

#: src/calculator_pi.cpp:163
msgid "This is a calculator & mathematical expression parsing plugin.\n"
"Would you like to know your hull speed?"
msgstr "Detta är en plugin för kalkyl och matematisk analys.\n"
"Vill du vill veta din skrovhastighet?"

#: src/calculator_pi.cpp:253
msgid "Calculator Preferences"
msgstr "Kalkylator-inställningar"

#: src/calculatorgui_impl.h:45 src/calculatorgui.h:77
msgid "Calculator preferences"
msgstr "Kalkylatorinställningar"

#: src/calculatorgui_impl.h:51
msgid "Calculator by SaltyPaws"
msgstr "Kalkylatorn av SaltyPaws"

#: src/calculatorgui_impl.cpp:85
msgid "Error"
msgstr "Fel"

#: src/calculatorgui_impl.cpp:85
msgid "Ans"
msgstr "Ans"

#: src/calculatorgui_impl.cpp:95
msgid "Calculator output:"
msgstr "Kalkylatorns utdata:"

#: src/calculatorgui.cpp:33
msgid "Calculate"
msgstr "Beräkna"

#: src/calculatorgui.cpp:39
msgid "Help"
msgstr "Hjälp"

#: src/calculatorgui.cpp:54
msgid "Use up and down keys, while cursor is in input box, to recall previous input and results.\n"
"Examples of expression that work in the calculator are: (comments are in brackets, some results depend on other example calculations):\n"
"=========\n"
"Hull speed:\n"
"    LWL=48\t\t\t\t\t(water line lenght in feet)\n"
"    vhull=1.34*LWL^(1/2)\t(hull speed in knots)\n\n"
"Conversions:\n"
"    ftm=0.3048\t\t\t\t(feet to meters)\n"
"    km_to_nm=0.539957\t(Kilometers to nautical Mile)\n"
"    ftm*LWL\t\t\t\t(waterline length in meters)\n\n"
"Distance to horizon\n"
"    R=6378.1*1000\t\t\t(Radius of the earth in m)\n"
"    H=2.5\t\t\t\t\t(Height of the eye above sea-level in m)\n"
"    d = R * acos(R/(R + h))\t(Distance to horizon in m)   \n"
"    ans*km_to_nm\t\t\t(Distance to horizon in nm)\n\n"
"Distance to lighthouse\n"
"    H1=200\t\t\t\t\t(height of lighthouse in m)\n"
"    d1 = R*acos(R/(R + H1))(Distance to horizon in m)\n"
"    distance=d1+d\t\t\t(visibility range of lighthouse in m)\n\n"
"Operators:\n"
"          & | << >> \n"
"          = <> < > <= >=\n"
"          + -\n"
"          * / % ||\n"
"          ^ (NB use ^(1/2) for square root)\n"
"          ! (Factorial)\n"
" \n"
"Functions:\n"
"          Abs, Exp, Sign, Sqrt, Log, Log10\n"
"          Sin, Cos, Tan, ASin, ACos, Atan (default entry is in radians use e.g. sin(dtr*90) to calculate in degree)\n"
"          Factorial\n"
" \n"
"Variables:\n"
"          Pi, e\n"
"\t  dtr is the conversion factor from degrees to radians\n"
"\t  Ans is the result of the previous calulation\t\t\n"
"          you can define your own variables (e.g. myvariable=10/8*cos(dtr*90) or yourvariable=Ans)"
msgstr "När pekaren är i inmatningsfältet kan upp/ned-pilarna användas för att växla till tidigare data och resultat\n"
"Följande är exempel på beräkningar som fungerar. (Kommentarer inom parentes. Vissa beräkningar är beroende av tidigare exempel):\n"
"=========\n"
"Fart:\n"
" LWL=48\t\t\t\t\t(vattenlinjen i fot)\n"
" vhull=1.34*LWL^(1/2)\t(fart i knop)\n\n"
"Konverteringar:\n"
" ftm=0.3048\t\t\t\t(fot till meters\n"
" km_to_nm=0.539957\t(Kilometer till nautisk mil)\n"
" ftm*LWL\t\t\t\t(vattenlinjelängd i meter)\n\n"
"Avstånd till horisonten\n"
" R=6378.1*1000\t\t\t(Jordradien i m)\n"
" H=2.5\t\t\t\t\t(Ögats höjd över vattenytan i m)\n"
" d = R * acos(R/(R + h))\t(Avstånd till horisonten i m) \n"
" ans*km_to_nm\t\t\t(Avstånd till horisonten i NM)\n\n"
"Avstånd till fyr\n"
" H1=200\t\t\t\t\t(Fyrhöjd i m)\n"
" d1 = R*acos(R/(R + H1))(Avstånd till horisonten i m)\n"
" distance=d1+d\t\t\t(Fyrljusräckvidd i m)\n\n"
"Operators:\n"
" & | << >> \n"
" = <> < > <= >=\n"
" + -\n"
" * / % ||\n"
" ^ (NB; använd ^(1/2) for kvadratrot)\n"
" ! (Faktorer)\n"
" \n"
"Funktioner:\n"
" Abs, Exp, Sign, Sqrt, Log, Log10\n"
" Sin, Cos, Tan, ASin, ACos, Atan (Angett som radianer. Använd ex.vis. sin(dtr*90) för att räkna i grader)\n"
" Faktorer\n"
" \n"
"Variabler:\n"
" Pi, e\n"
"\t dtr är konverteringsfaktor från grader till radianer\n"
"\t Ans är resultatet från tidigare beräkning\t\t\n"
" Du kan definiera egna variabler (t.ex. minVar=10/8*cos(dtr*90) eller egenVar=Ans)"

#: src/calculatorgui.cpp:110
msgid "General settings"
msgstr "Allmänna inställningar"

#: src/calculatorgui.cpp:120
msgid "Opacity"
msgstr "Genomskinlighet"

