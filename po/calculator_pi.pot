# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the calculator_pi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calculator_pi 2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-14 19:26+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: src/calculator_pi.cpp:104
msgid "calculator"
msgstr ""

#: src/calculator_pi.cpp:108 src/calculator_pi.cpp:181 src/calculatorgui.h:69
#: src/calculatorgui.h:382
msgid "Calculator"
msgstr ""

#: src/calculator_pi.cpp:186
msgid "Calculator Plugin"
msgstr ""

#: src/calculator_pi.cpp:191
msgid ""
"This is a light weight yet powerful calculator plugin for OpenCPN.\n"
"  Would you like to know your hull speed?"
msgstr ""

#: src/calculator_pi.cpp:364
msgid "Calculator Preferences"
msgstr ""

#: src/calculatorgui_impl.h:64 src/calculatorgui.h:128
msgid "Calculator preferences"
msgstr ""

#: src/calculatorgui_impl.h:70
msgid "Help!!!!"
msgstr ""

#: src/calculatorgui_impl.h:76
msgid "Degree Conversions"
msgstr ""

#: src/calculatorgui_impl.h:90
msgid "Extra Functions"
msgstr ""

#: src/calculatorgui_impl.cpp:88 src/calculatorgui.cpp:638
#: src/calculatorgui.cpp:650
msgid "All"
msgstr ""

#: src/calculatorgui_impl.cpp:133
msgid ""
"LWL = Length of water line\n"
"Vhull = Hull speed"
msgstr ""

#: src/calculatorgui_impl.cpp:137
msgid "fetch = distance over water that the wind blows"
msgstr ""

#: src/calculatorgui_impl.cpp:141
msgid ""
"fetch = distance over water that the wind blows\n"
"U10 - windspeed (10m) must be entered as m/s"
msgstr ""

#: src/calculatorgui_impl.cpp:145
msgid ""
"Height_observer is the height of the observer\n"
"Height_object is the height of the object"
msgstr ""

#: src/calculatorgui_impl.cpp:499
msgid "Test"
msgstr ""

#: src/calculatorgui_impl.cpp:503
msgid "Mouse"
msgstr ""

#: src/calculatorgui_impl.cpp:507
msgid "List"
msgstr ""

#: src/calculatorgui_impl.cpp:558
msgid "Error"
msgstr ""

#: src/calculatorgui_impl.cpp:644
msgid "Calculator INPUT:"
msgstr ""

#: src/calculatorgui_impl.cpp:644
msgid " Calculator output:"
msgstr ""

#: src/calculatorgui.cpp:33 src/calculatorgui.cpp:937
msgid "Calculate"
msgstr ""

#: src/calculatorgui.cpp:39 src/calculatorgui.cpp:671
msgid "Function"
msgstr ""

#: src/calculatorgui.cpp:42
msgid "History"
msgstr ""

#: src/calculatorgui.cpp:45
msgid "Help"
msgstr ""

#: src/calculatorgui.cpp:130
msgid "Display Accuracy"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Precise (Default)"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Precise, thousands separator"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Succinct"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Succinct, thousands separator"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Scientific"
msgstr ""

#: src/calculatorgui.cpp:132
msgid "Humanised"
msgstr ""

#: src/calculatorgui.cpp:142
msgid "Show/Hide Buttons"
msgstr ""

#: src/calculatorgui.cpp:144
msgid "Help Button"
msgstr ""

#: src/calculatorgui.cpp:146
msgid "Show/Hide help button (you can always type \"help\" from input window)."
msgstr ""

#: src/calculatorgui.cpp:150
msgid "Calculate Button"
msgstr ""

#: src/calculatorgui.cpp:152
msgid ""
"Show/Hide Calculate button (you can always press enter at the end of input)."
msgstr ""

#: src/calculatorgui.cpp:156
msgid "Function Button"
msgstr ""

#: src/calculatorgui.cpp:164
msgid "History Settings"
msgstr ""

#: src/calculatorgui.cpp:171
msgid "Max Results"
msgstr ""

#: src/calculatorgui.cpp:173
msgid ""
"More results use up more memory. Memory is only allocated if required (e.g. "
"if number is 30000, corresponding memory will only be used after this many "
"calculations)."
msgstr ""

#: src/calculatorgui.cpp:178
msgid ""
"More results use more memory. Memory will be cleared if Max Results is "
"reached. NB variables are kept"
msgstr ""

#: src/calculatorgui.cpp:185
msgid "Opacity"
msgstr ""

#: src/calculatorgui.cpp:196
msgid "Show History Window"
msgstr ""

#: src/calculatorgui.cpp:198
msgid "Show/Hide history"
msgstr ""

#: src/calculatorgui.cpp:206
msgid "Other"
msgstr ""

#: src/calculatorgui.cpp:208
msgid "Log results to opencpn"
msgstr ""

#: src/calculatorgui.cpp:209
msgid "Log calculator results in OpenCPN log file"
msgstr ""

#: src/calculatorgui.cpp:255
msgid ""
"Calculator Plugin for OpenCPN by SaltyPaws aka Walbert Schulpen/Updated by "
"Mike Rossiter(Rasbats)\n"
"=======================================\n"
"\n"
"This is a light weight yet powerful calculator plugin for OpenCPN. Would you "
"like to know your hull speed? \n"
"\n"
"Key features are:\n"
"* Storing results in variables\n"
"* Shows historic calculations\n"
"* Full complement of nautical functions\n"
"* Screen footprint can be optimised & minimised as required\n"
"\n"
"Adding formulas is easy. If your favorite nautical equation is missing, "
"please let me know your equation via flyspray, and I will add it.\n"
"\n"
"Help\n"
"=========\n"
"Type help in the calculator to get these instructions.\n"
"\n"
"Examples of expression that work in the calculator are: (comments are in "
"brackets, some results depend on other example calculations):\n"
"=========\n"
"Hull speed:\n"
"\tLWL=48\t\t\t(water line lenght in feet)\n"
"\tvhull=1.34*LWL^(1/2)\t(hull speed in knots)\n"
"\n"
"Conversions:\n"
"\tftm=0.3048\t\t\t(feet to meters)\n"
"\tkm_to_nm=0.539957\t\t(Kilometers to nautical Mile)\n"
"\tftm*LWL\t\t\t(waterline length in meters)\n"
"\n"
"Distance to horizon\n"
"\tR=6378.1*1000\t\t(Radius of the earth in m)\n"
"\tH=2.5\t\t\t(Height of the eye above sea-level in m)\n"
"\td = R * acos(R/(R + h))\t(Distance to horizon in m)   \n"
"\tans*km_to_nm\t\t(Distance to horizon in nm)\n"
"\n"
"Distance to lighthouse\n"
"\tH1=200\t\t\t(height of lighthouse in m)\n"
"\td1 = R*acos(R/(R + H1))\t(Distance to horizon in m)\n"
"\tdistance=d1+d\t\t(visibility range of lighthouse in m)\n"
"\n"
"Built-in functions\n"
"\n"
"The following table gives an overview of the functions supported by the "
"default implementation. It lists the function names, the number of arguments "
"and a brief description.\n"
"Name \tArgc. \tExplanation\n"
"sin \t1 \tsine function\n"
"cos \t1 \tcosine function\n"
"tan \t1 \ttangens function\n"
"asin \t1 \tarcus sine function\n"
"acos \t1 \tarcus cosine function\n"
"atan \t1 \tarcus tangens function\n"
"sinh \t1 \thyperbolic sine function\n"
"cosh \t1 \thyperbolic cosine\n"
"tanh \t1 \thyperbolic tangens function\n"
"asinh \t1 \thyperbolic arcus sine function\n"
"acosh \t1 \thyperbolic arcus tangens function\n"
"atanh \t1 \thyperbolic arcur tangens function\n"
"log2 \t1 \tlogarithm to the base 2\n"
"log10 \t1 \tlogarithm to the base 10\n"
"log \t1 \tlogarithm to the base 10\n"
"ln \t\t1 \tlogarithm to base e (2.71828...)\n"
"exp \t1 \te raised to the power of x\n"
"sqrt \t1 \tsquare root of a value\n"
"sign \t1 \tsign function -1 if x<0; 1 if x>0\n"
"rint \t1 \tround to nearest integer\n"
"abs \t1 \tabsolute value\n"
"min \tvar. \tmin of all arguments\n"
"max \tvar. \tmax of all arguments\n"
"sum \tvar. \tsum of all arguments\n"
"avg \tvar. \tmean value of all arguments\n"
"\n"
"\n"
"Built-in binary operators\n"
"\n"
"The following table lists the default binary operators supported by the "
"parser.\n"
"Operator \tMeaning \tPriority\n"
"= \t\tassignement \t\t\t-1\n"
"&& \tlogical and \t\t\t1\n"
"|| \t\tlogical or\t \t\t\t2\n"
"<= \t\tless or equal \t\t\t4\n"
">= \t\tgreater or equal \t\t4\n"
"!= \t\tnot equal \t\t\t\t4\n"
"== \t\tequal \t\t\t\t\t4\n"
"> \t\tgreater than \t\t\t4\n"
"< \t\tless than \t\t\t\t4\n"
"+ \t\taddition \t\t\t\t5\n"
"- \t\tsubtraction \t\t\t5\n"
"* \t\tmultiplication \t\t6\n"
"/ \t\tdivision \t\t\t\t6\n"
"^ \t\traise x to the power of y \t7\n"
"*The assignment operator is special since it changes one of its arguments and "
"can only by applied to variables.\n"
"Other operators\n"
"\n"
"muParser has built in support for the if then else operator. It uses lazy "
"evaluation in order to make sure only the necessary branch of the expression "
"is evaluated.\n"
"Operator \tMeaning \tRemarks\n"
"?: \tif then else operator \tC++ style syntax\n"
" \n"
"Variables:\n"
"\tpi, e\n"
"\tans is the result of the previous calulation\n"
"\tdtr is the conversion factor from degrees to radians\t\t\n"
"\tyou can define your own variables (e.g. myvariable=10/8*cos(dtr*90) or "
"yourvariable=ans)\n"
"\tclear removes results in the history, but leaves your defined variables in "
"tact\n"
"\n"
"User Interface - type these commands in the command window:\n"
"\thistory - Toggle the history panel\n"
"\tshowhelp - Show/Hide the Help button\n"
"\tshowcalculate - Show/Hide the Calculate button\n"
"\tshowhistory - Show/Hide the history toggle\n"
"\thelp - show the help menu\n"
"\n"
"Settings/Plugins/Preferences:\n"
"\tShow/Hide Function, Calculate and Help buttons\n"
"\tHistory Settings: max Results -this is the number of results that will be "
"stored in the history pulldown. The history pulldown will contain five times "
"this value\n"
"\tLog to opencpn: Enable/Disable logging of results to opencpn logfile.\n"
"\n"
"Calculate Button:\n"
"\tEnter the expression in the input box: e.g. 4+2. Do NOT use the = sign. "
"\"Enter\" or press \"Calculate\".\n"
"\tIf you are using \"History\" the results will appear there. If not the "
"result will appear in the input box.\n"
"\tIf you make a mistake, press \"Calculate\" to clear the input box.  "
msgstr ""

#: src/calculatorgui.cpp:418 src/calculatorgui.cpp:513
msgid "N"
msgstr ""

#: src/calculatorgui.cpp:418 src/calculatorgui.cpp:513
msgid "S"
msgstr ""

#: src/calculatorgui.cpp:448 src/calculatorgui.cpp:550
msgid "E"
msgstr ""

#: src/calculatorgui.cpp:448 src/calculatorgui.cpp:550
msgid "W"
msgstr ""

#: src/calculatorgui.cpp:580
msgid "Convert"
msgstr ""

#: src/calculatorgui.cpp:636
msgid "Select Function Category"
msgstr ""

#: src/calculatorgui.cpp:648
msgid "Select Function"
msgstr ""

#: src/calculatorgui.cpp:660
msgid "Function And Description"
msgstr ""

#: src/calculatorgui.cpp:675 src/calculatorgui.cpp:943
msgid "Description"
msgstr ""

#: src/calculatorgui.cpp:689
msgid "Input Parameters"
msgstr ""

#: src/calculatorgui.cpp:697 src/calculatorgui.cpp:718 src/calculatorgui.cpp:739
#: src/calculatorgui.cpp:760 src/calculatorgui.cpp:781 src/calculatorgui.cpp:802
#: src/calculatorgui.cpp:823 src/calculatorgui.cpp:844 src/calculatorgui.cpp:865
#: src/calculatorgui.cpp:886
msgid "Parameter"
msgstr ""

#: src/calculatorgui.cpp:905
msgid "Function Result Select Units"
msgstr ""

#: src/calculatorgui.cpp:916
msgid "MyLabel"
msgstr ""

#: src/calculatorgui.cpp:940
msgid "Close"
msgstr ""

#: src/functions.cpp:34
msgid "Hull Speed"
msgstr ""

#: src/functions.cpp:35
msgid ""
"Hull speed, sometimes referred to as displacement speed, can be thought of "
"the speed at which the wavelength of the boats bow wave (in displacement "
"mode) is equal to the boat length. As boat speed increases, the size of the "
"bow wave increases, and therefore so does its wavelength. When hull speed is "
"reached, a boat in pure displacement mode will appear trapped in a trough "
"behind its very large bow wave."
msgstr ""

#: src/functions.cpp:36
msgid "Design"
msgstr ""

#: src/functions.cpp:37 src/functions.cpp:64 src/functions.cpp:91
#: src/functions.cpp:118 src/functions.cpp:145 src/functions.cpp:226
#: src/functions.cpp:253
msgid "http://www.bootkeyharbor.com/Formulas.htm"
msgstr ""

#: src/functions.cpp:61 src/functions.cpp:62
msgid "Draft of vessel when heeled"
msgstr ""

#: src/functions.cpp:63 src/functions.cpp:90 src/functions.cpp:117
#: src/functions.cpp:144 src/functions.cpp:171 src/functions.cpp:198
#: src/functions.cpp:333 src/functions.cpp:360 src/functions.cpp:522
#: src/functions.cpp:549
msgid "Navigation"
msgstr ""

#: src/functions.cpp:88 src/functions.cpp:89
msgid "Speed of wind-driven current"
msgstr ""

#: src/functions.cpp:115
msgid "Maximum Wavelength"
msgstr ""

#: src/functions.cpp:116
msgid "Maximum Wavelength = 1.5 x square root of fetch in nm"
msgstr ""

#: src/functions.cpp:142
msgid "Wave speed =f(period)"
msgstr ""

#: src/functions.cpp:143
msgid ""
"Wave speed = 3.03 x (wave period in seconds) NB output units need to be "
"confirmed"
msgstr ""

#: src/functions.cpp:169
msgid "Change in height of Tide"
msgstr ""

#: src/functions.cpp:170
msgid ""
"Height is total change in tide height between high and low. The time ratio is "
"time elapsed from the previous tide divided by the time difference between "
"the two tides. (Similar to rule of 12)"
msgstr ""

#: src/functions.cpp:172
msgid "Not very accurate - use official publications"
msgstr ""

#: src/functions.cpp:196
msgid "Fetch Modified Wilson"
msgstr ""

#: src/functions.cpp:197
msgid ""
"Calculate Fetch as function of windspeed at 10 meters height (u10) and Fetch. "
"The equation is based on the wilson equation (1965), but modified by Naoto "
"for increased accuracy."
msgstr ""

#: src/functions.cpp:199
msgid "Naoto Ebuchi, Journal of oceanography, vol 55, pp 575 to 584, 1999"
msgstr ""

#: src/functions.cpp:223
msgid "Flow rate of leak in boat"
msgstr ""

#: src/functions.cpp:224
msgid ""
"Flow rate of leak in boat:\tQ = 3,600 (A) (H)\n"
"\n"
"Q = volume per minute of water coming in\n"
"A = area of hole\n"
"H = height of water over hole, to bottom of the opening"
msgstr ""

#: src/functions.cpp:225 src/functions.cpp:252 src/functions.cpp:279
#: src/functions.cpp:306
msgid "Safety"
msgstr ""

#: src/functions.cpp:250
msgid "Patch over hole"
msgstr ""

#: src/functions.cpp:251
msgid ""
"Patch or cover thickness to withstand water pressure (patch over hole):\n"
"\n"
"\tT = square root of:\t(48x (H) (L2))/ 1000)\n"
"\tT = thickness of wood or plywood patch\n"
"\tH = height of water above bottom of hole\n"
"\tL = length of patch, longest distance between supports"
msgstr ""

#: src/functions.cpp:277
msgid "Line Break strength (circumference)"
msgstr ""

#: src/functions.cpp:278 src/functions.cpp:305
msgid ""
"Each type of line, natural fiber, synthetic and wire rope, have different "
"breaking strengths and safe working loads. Natural breaking strength of "
"manila line is the standard against which other lines are compared. Synthetic "
"lines have been assigned comparison factors against which they are compared "
"to manila line. The basic breaking strength factor for manila line is found "
"by multiplying the square of the circumference of the line by 900 lbs. Knots "
"and splices only have 50-60 of line strenght.\n"
"\n"
"Line Material\tComparison Factor \n"
"Nylon\t\t\t2.5\n"
"Dacron\t\t\t2.0\n"
"Polypropylene\t\t1.4\n"
"Manilla \t\t\t1.0"
msgstr ""

#: src/functions.cpp:280 src/functions.cpp:307
msgid "http://www.boatsafe.com/marlinespike/breaking.htm"
msgstr ""

#: src/functions.cpp:304
msgid "Line Break strength (diameter)"
msgstr ""

#: src/functions.cpp:331
msgid "Velocity Made Good (angle)"
msgstr ""

#: src/functions.cpp:332 src/functions.cpp:359
msgid ""
"Velocity made good, or vmg, is a term in sailing, and specifically yacht "
"racing, that refers to the component of a sailboats velocity that is in the "
"direction of the true wind. The concept is useful in sailing, because a "
"sailboat often cannot, or should not, sail directly to a mark to reach the "
"mark as quickly as possible. Sailboats cannot sail directly upwind, and it is "
"usually less than optimal, and sometimes dangerous, to sail directly "
"downwind. Instead of sailing toward the mark, the helmsman chooses a point of "
"sail that optimizes velocity made good."
msgstr ""

#: src/functions.cpp:334 src/functions.cpp:361
msgid "http://lagoon-inside.com/en/faster-thanks-to-the-vmg-concept/"
msgstr ""

#: src/functions.cpp:358
msgid "Velocity Made Good (delta)"
msgstr ""

#: src/functions.cpp:385
msgid "Wind Chill"
msgstr ""

#: src/functions.cpp:386
msgid ""
"In November 2001 Canada, U.S. and U.K. implemented a new wind chill index "
"developed by scientists and medical experts on the Joint Action Group for "
"Temperature Indices (JAG/TI). It is determined by iterating a model of skin "
"temperature under various wind speeds and temperatures using standard "
"engineering correlations of wind speed and heat transfer rate. Heat transfer "
"was calculated for a bare face in wind, facing the wind, while walking into "
"it at 1.4 metre per second (3.1mph). The model corrects the officially "
"measured wind speed (at 10 meter height) to the wind speed at face height, "
"assuming the person is in an open field. The results of this model may be "
"approximated, to within one degree, from the following formula:"
msgstr ""

#: src/functions.cpp:387 src/functions.cpp:414 src/functions.cpp:441
#: src/functions.cpp:468
msgid "Weather"
msgstr ""

#: src/functions.cpp:388
msgid ""
"http://en.wikipedia.org/wiki/Wind_chill, http://climate.weatheroffice.gc.ca/"
"prods_servs/normals_documentation_e.html"
msgstr ""

#: src/functions.cpp:412
msgid "Humidex"
msgstr ""

#: src/functions.cpp:413
msgid ""
"Humidex is an index to indicate how hot or humid the weather feels to the "
"average person. It is derived by combining temperature and humidity values "
"into one number to reflect the perceived temperature. For example, a humidex "
"of 40 means that the sensation of heat when the temperature is 30 degrees and "
"the air is humid feels more or less the same as when the temperature is 40 "
"degrees and the air is dry. "
msgstr ""

#: src/functions.cpp:415
msgid "http://climate.weather.gc.ca/glossary_e.html"
msgstr ""

#: src/functions.cpp:439
msgid "Beaufort to Wind Velocity"
msgstr ""

#: src/functions.cpp:440 src/functions.cpp:467
msgid ""
"Beaufort scale was created in 1805 by Sir Francis Beaufort, British admiral "
"and hydrographer. It describes wind speed based mainly on observed sea "
"conditions."
msgstr ""

#: src/functions.cpp:442 src/functions.cpp:469
msgid "http://planetcalc.com/384/"
msgstr ""

#: src/functions.cpp:466
msgid "Wind Velocity to Beaufort"
msgstr ""

#: src/functions.cpp:493
msgid "Pressure at depth"
msgstr ""

#: src/functions.cpp:494
msgid ""
"If a fluid is within a container then the depth of an object placed in that "
"fluid can be measured. The deeper the object is placed in the fluid, the more "
"pressure it experiences. This is because is the weight of the fluid above it. "
"The more dense the fluid above it, the more pressure is exerted on the object "
"that is submerged, due to the weight of the fluid. Density is function of "
"salinity and water temperature. Below are average values.\n"
"Density Sea Water = 1.035 kg/liter\n"
"Density Fresh Water = 1.0 kg/liter"
msgstr ""

#: src/functions.cpp:495
msgid "Diving"
msgstr ""

#: src/functions.cpp:496
msgid ""
"http://www.grc.nasa.gov/WWW/k-12/WindTunnel/Activities/fluid_pressure.html\n"
"Saltypaws"
msgstr ""

#: src/functions.cpp:520
msgid "Distance to horizon"
msgstr ""

#: src/functions.cpp:521
msgid ""
"If the Earth is assumed to be a sphere with no atmosphere then the distance "
"to the horizon can easily be calculated. (The Earths radius of curvature "
"actually varies by 1 between the Equator and the Poles, so this formula isnt "
"absolutely exact even assuming no refraction.) This formula assumes earth "
"diameter of 12 756.32 km."
msgstr ""

#: src/functions.cpp:523
msgid "https://en.wikipedia.org/wiki/Horizon, geometrical model"
msgstr ""

#: src/functions.cpp:547
msgid "Objects above horizon"
msgstr ""

#: src/functions.cpp:548
msgid ""
"To compute the greatest distance at which an observer can see the top of an "
"object above the horizon, compute the distance to the horizon for a "
"hypothetical observer on top of that object, and add it to the real observers "
"distance to the horizon. This formula assumes earth diameter of 12 756.32 km."
msgstr ""

#: src/functions.cpp:550
msgid "https://en.wikipedia.org/wiki/Horizon, Objects above horizon"
msgstr ""

#: src/functions.cpp:574 src/functions.cpp:575
msgid "Convert Distance"
msgstr ""

#: src/functions.cpp:576 src/functions.cpp:603 src/functions.cpp:630
#: src/functions.cpp:657 src/functions.cpp:684 src/functions.cpp:711
#: src/functions.cpp:739
msgid "Conversions"
msgstr ""

#: src/functions.cpp:577 src/functions.cpp:604 src/functions.cpp:631
#: src/functions.cpp:658 src/functions.cpp:685 src/functions.cpp:712
msgid "Saltypaws"
msgstr ""

#: src/functions.cpp:601 src/functions.cpp:602
msgid "Convert Temperature"
msgstr ""

#: src/functions.cpp:628 src/functions.cpp:629
msgid "Convert Speed"
msgstr ""

#: src/functions.cpp:655 src/functions.cpp:656
msgid "Convert Pressure"
msgstr ""

#: src/functions.cpp:682 src/functions.cpp:683
msgid "Convert Angle"
msgstr ""

#: src/functions.cpp:709 src/functions.cpp:710
msgid "Convert Flowrate"
msgstr ""

#: src/functions.cpp:737
msgid "Convert Degrees (All formats)"
msgstr ""

#: src/functions.cpp:738
msgid "Convert (All formats)"
msgstr ""

#: src/functions.cpp:740
msgid "Rasbats"
msgstr ""
